# plugin manager
[[plugins]]
repo = 'Shougo/dein.vim'

# git
[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'airblade/vim-gitgutter'

# status line
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline = {
      \ 'component_function': {
      \   'mode': 'LightlineMode',
      \   'gitbranch': 'LightlineGitbranch',
      \   'lineinfo': 'LightlineLineinfo',
      \   'filetype': 'LightlineFiletype',
      \   'fileencoding': 'LightlineFileencoding',
      \   'fileformat': 'LightlineFileformat',
      \   'modified': 'LightlineModified',
      \   'filename': 'LightlineFilename',
      \   'readonly': 'LightlineReadonly',
      \ },
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ],
      \   'right': [ [ 'lineinfo' ],
      \              [ 'percent' ],
      \              [ 'fileformat', 'fileencoding', 'filetype' ] ]
      \ },
      \ 'inactive': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ],
      \   'right': [ [ 'lineinfo' ],
      \              [ 'percent' ],
      \              [ 'fileformat', 'fileencoding', 'filetype' ] ]
      \ },
      \ 'separator': { 'left': "\ue0b0", 'right': "\ue0b2" },
      \ }

" for the default component function, referred to https://github.com/itchyny/lightline.vim/issues/120
function! LightlineMode()
  return expand('%:t') =~# '^__Tagbar__' ? 'Tagbar':
        \ expand('%:t') ==# 'ControlP' ? 'CtrlP' :
        \ &filetype ==# 'unite' ? 'Unite' :
        \ &filetype ==# 'vimfiler' ? 'VimFiler' :
        \ &filetype ==# 'vimshell' ? 'VimShell' :
        \ &filetype ==# 'nerdtree' ? 'NERDTree' :
        \ lightline#mode()
endfunction

function! LightlineLineinfo()
  return &filetype ==# 'nerdtree' ? '' : printf("%3d:%-2d", line('.'), col('.'))
endfunction

function! LightlineFiletype()
  return &filetype ==# 'nerdtree' ? '' : strlen(&filetype) ? &filetype : 'no ft'
endfunction

function! LightlineFileencoding()
  return &filetype ==# 'nerdtree' ? '' : strlen(&fenc) ? &fenc : &enc
endfunction

function! LightlineFileformat()
  return &filetype ==# 'nerdtree' ? '' : &fileformat
endfunction

function! LightlineModified()
  return &filetype ==# 'nerdtree' ? '' : &modified ? '+' : &modifiable ? '' : '-'
endfunction

function! LightlineFilename()
  return &filetype ==# 'nerdtree' ? '' : expand('%:t')
endfunction

function! LightlineReadonly()
  return &filetype ==# 'nerdtree' ? '' : &readonly ? 'readonly' : ''
endfunction

function! LightlineGitbranch()
  return &filetype ==# 'nerdtree' ? '' : FugitiveHead()
endfunction
'''

# filer
[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_add = '''
let g:webdevicons_conceal_nerdtree_brackets = 1
'''

[[plugins]]
repo = 'preservim/nerdtree'
depends = ['vim-devicons']
hook_add = '''
let g:NERDTreeShowHidden = 1
augroup nerdtree_conf
  autocmd!
  autocmd StdinReadPre * let s:std_in=1
  autocmd VimEnter * NERDTree | call lightline#update() | if argc() > 0 || exists("s:std_in") | wincmd p | call lightline#update() | endif
  autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() |
    \ quit | endif
augroup END
'''

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'
depends = ['nerdtree']
hook_add = '''
let g:NERDTreeGitStatusUseNerdFonts = 1
let g:NERDTreeGitStatusConcealBrackets = 1
'''

[[plugins]]
repo = 'tiagofumo/vim-nerdtree-syntax-highlight'
depends = ['nerdtree']
hook_add = '''
let g:NERDTreeFileExtensionHighlightFullName = 1
let g:NERDTreeExactMatchHighlightFullName = 1
let g:NERDTreePatternMatchHighlightFullName = 1

let g:NERDTreeHighlightFolders = 1
let g:NERDTreeHighlightFoldersFullName = 1
'''

# incremental search
[[plugins]]
repo = 'junegunn/fzf'
build = './install'

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = ['fzf']
hook_add = '''
let $FZF_DEFAULT_OPTS="--layout=reverse"
let g:fzf_layout = { 'down': '~40%' }
" let g:fzf_layout = {'up':'~90%', 'window': { 'width': 0.8, 'height': 0.8,'yoffset':0.5,'xoffset': 0.5, 'border': 'sharp' } }
'''

# commentary
[[plugins]]
repo = 'tpope/vim-commentary'

# colorscheme
[[plugins]]
repo = 'altercation/vim-colors-solarized'
hook_add = '''
set bg=dark
colorscheme solarized
'''
