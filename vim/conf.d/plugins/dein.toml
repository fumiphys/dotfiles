# plugin manager
[[plugins]]
repo = 'Shougo/dein.vim'

# visualization
[[plugins]]
repo = 'joshdick/onedark.vim'

# bracket completion
[[plugins]]
repo = 'cohama/lexima.vim'

# completion
[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'pdavydov108/vim-lsp-cquery'

[[plugins]]
repo = 'Shougo/neoinclude.vim'
hook_add = '''
let g:neoinclude#paths = {'cpp': '/usr/local/include/c++/8.2.0'}
'''

[[plugins]]
repo = 'kyouryuukunn/asyncomplete-neoinclude.vim'
hook_add = '''
au User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#neoinclude#get_source_options({
    \ 'name': 'neoinclude',
    \ 'whitelist': ['cpp'],
    \ 'refresh_pattern': '\(<\|"\|/\)$',
    \ 'completor': function('asyncomplete#sources#neoinclude#completor'),
    \ }))
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-buffer.vim'
hook_add = '''
au User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#buffer#get_source_options({
    \ 'name': 'buffer',
    \ 'priority': 5,
    \ 'whitelist': ['*'],
    \ 'completor': function('asyncomplete#sources#buffer#completor'),
    \ }))
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-file.vim'
hook_add = '''
au User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#file#get_source_options({
    \ 'name': 'file',
    \ 'priority': 3,
    \ 'whitelist': ['*'],
    \ 'completor': function('asyncomplete#sources#file#completor'),
    \ }))
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-necosyntax.vim'
depends = ['neco-syntax']
hook_add = '''
au User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#necosyntax#get_source_options({
    \ 'name': 'necosyntax',
    \ 'priority': 7,
    \ 'whitelist': ['*'],
    \ 'completor': function('asyncomplete#sources#necosyntax#completor'),
    \ }))
'''

[[plugins]]
repo = 'Shougo/neco-syntax'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-necovim.vim'
depends = ['neco-vim']
hook_add = '''
au User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#necovim#get_source_options({
    \ 'name': 'necovim',
    \ 'whitelist': ['vim'],
    \ 'priority': 10,
    \ 'completor': function('asyncomplete#sources#necovim#completor'),
    \ }))
'''

[[plugins]]
repo = 'Shougo/neco-vim'

[[plugins]]
repo = 'yami-beta/asyncomplete-omni.vim'
hook_add = '''
au User call asyncomplete#register_source(asyncomplete#sources#omni#get_source_options({
  \ 'name': 'omni',
  \ 'whitelist': ['*'],
  \ 'completor': function('asyncomplete#sources#omni#completor')
  \  }))
'''

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
if executable('pyls')
  au User lsp_setup call lsp#register_server({
        \ 'name': 'pyls',
        \ 'cmd': {server_info->['pyls']},
        \ 'whitelist': ['python'],
        \ 'workspace_config': {'pyls': {'plugins': {'pydocstyle': {'enabled': v:true}}}}
        \ })
endif

if executable('cquery')
   au User lsp_setup call lsp#register_server({
      \ 'name': 'cquery',
      \ 'cmd': {server_info->['cquery']},
      \ 'root_uri': {server_info->lsp#utils#path_to_uri(lsp#utils#find_nearest_parent_file_directory(lsp#utils#get_buffer_path(), 'compile_commands.json'))},
      \ 'initialization_options': { 'cacheDirectory': '/tmp/cquery/cache' },
      \ 'whitelist': ['c', 'cpp', 'objc', 'objcpp', 'cc'],
      \ })
endif

let g:lsp_signs_enabled = 0
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'

[[plugins]]
repo = 'Shougo/neosnippet.vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-neosnippet.vim'
depends = ['asyncomplete.vim']
hook_add = '''
call asyncomplete#register_source(asyncomplete#sources#neosnippet#get_source_options({
  \ 'name': 'neosnippet',
  \ 'whitelist': ['*'],
  \ 'completor': function('asyncomplete#sources#neosnippet#completor'),
  \ }))
imap <C-k> <Plug>(neosnippet_expand_or_jump)
smap <C-k> <Plug>(neosnippet_expand_or_jump)
xmap <C-k> <Plug>(neosnippet_expand_target)
'''

# syntax check
[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
let g:ale_linters = {
  \ 'cpp': ['gcc'],
  \ 'python': ['flake8'],
\}
let g:ale_linters_explicit = 1
let g:ale_lint_on_text_changed = 'never'
let g:ale_lint_on_enter = 0
'''

# git
[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'tpope/vim-rhubarb'

# statusline
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline = {
  \ 'colorscheme': 'solarized',
  \ 'active': {
  \   'left': [ [ 'mode', 'paste' ],
  \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ],
  \   'right': [ [ 'lineinfo' ],
  \               [ 'percent' ],
  \               [ 'fileformat', 'fileencoding', 'filetype' ] ]
  \ },
  \ 'component_function': {
  \   'gitbranch': 'fugitive#head'
  \ }
  \ }
'''
